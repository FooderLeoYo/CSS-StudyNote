1. 定位的组成
	定位 = 定位模式 + 边偏移
	定位模式的值：static, relative, absolute, fixed
	边偏移：移动元素所需要移动的距离相对于定位参照元素（父元素、视窗等）相应边界的数值
	边偏移的值：top, bottom, left, right
	1.1 静态定位(了解)
		相当于没定位
	1.2 相对定位
		元素在移动位置的时候，是相对于它原来的位置来说的
		语法：
		选择器 {position: relative； }
		特点：
			1. 是相对于自己移动
			2. 占有原来的位置，后面的盒子不会浮上来（不脱标）
	1.3 绝对定位
		元素在移动的时候，是相对于它的祖先元素来说的
		语法：
		选择器 { position: absolute; }
		特点：
		1. 如果没有祖先元素或者祖先元素没有定位，则以浏览器为准定位
		2. 如果祖先元素有定位，则以最近一级祖先来定位
		3. 不占有原来的位置
	1.4 固定定位
		元素固定于浏览器可视区的位置
		语法：
		选择器 { position: fixed; }
		特点：
		1. 以浏览器的可视窗口为参照点移动元素，跟父元素没有任何关系，不跟随滚动条滚动
		2. 不占有原先的位置
		固定定位小技巧：固定在版心右侧
		1. 让盒子left:50%; 走到浏览器可视区的一半
		2. 让盒子margin-left; 版心宽度的一半距离。即再走版心宽度的一半
	1.5 粘性定位sticky(了解)
2. 定位的叠放顺序
	在使用定位布局时，可能会出现盒子重叠的情况。此时可使用z-index来控制z轴
	语法：
	选择器可 { z-index: 数字; }
	特点：
	1. 数字可以是正、0、负数，数值越大盒子越靠上
	2. 如果数字相等，则后来居上
	3. 数字后不能带单位
	4. 只有定位的盒子才有z-index属性

3. 定位的拓展
	3.1 绝对定位的盒子居中
		加了绝对定位的盒子不能通过margin:0 auto水平居中，需要用以下方法：
		1.left: 50%; 让盒子左侧移动到父级元素的水平中心位置
		2. margin-left: - 100px; 让合资向左移动自身宽度的一半
	3.2 定位的特殊性质
		1. 行内元素添加绝对或固定定位后，可以直接设置高度和宽度
		2. 块级元素添加绝对或相对定位后，如果不给高度和宽度，默认大小是内容的大小
	3.3 浮动元素、绝对定位（固定定位）元素都不会触发外边距合并的问题
	3.4 浮动元素只会压住它下面的标准流盒子但不会压住文字图片，绝对（固定）定位则会压住下面标准流的所有内容

4. 元素的显示与隐藏
	4.1 display
		display:none; 隐藏对象
		display:block; 除了转换为块级元素外，同时还有显示元素的意思
		注意，display隐藏元素后，不再占有原来的位置
	4.2 visibility
		visibility:visible; 元素可现
		visibility:hidden; 元素隐藏
		注意，visibility隐藏元素后，继续占有原来的位置
	4.3 overflow
		overflow属性指定了如果内容超过一个元素的框时，会发生什么
		visible 完全显示
		hidden 隐藏超出部分
		scroll 不管是否溢出，总是显示滚动条
		auto 溢出时才会显示滚动条

