CSS3新特性
1. CSS3选择器
	1.1 属性选择器
		1.1.1 种类
			1. 选出具有某些属性的
				/* 必须是input 但是同时具有 value这个属性 选择这个元素  [] */
				input[value] {
					// CSS样式
				}
			2. 选择属性=值的某些元素（重点）
				 /* 只选择 type =text 文本框的input 选取出来 */
				input[type=text] {
					// CSS样式
				}
			3. 选择属性值以特定内容开头的元素
				/* 选择首先是div 然后 具有class属性 并且属性值 必须是 icon开头的这些元素 */
				div[class^=icon] {
					// CSS样式
				}
			4. 选择属性值以特定内容结尾的元素
				/* 选择首先是section 然后 具有class属性 并且属性值 必须是 data结尾的这些元素 */
				section[class$=data] {
					color: blue;
				}
		1.1.2 类选择器和属性选择器 伪类选择器 权重都是 10
	1.2 结构伪类选择器
		1.2.1 nth-child(i)
			1.2.1.1 i如果是数字：选择父元素的第i个子元素，i从1开始如：
				ul li:nth-child(2) {
					background-color: skyblue;
				}
			1.2.1.2 i如果是关键字odd或even：选出所有奇数或偶数孩子（实现隔行变色）
			1.2.1.3 i如果是以n为变量的公式：
				1. nth-child(n)：n从0开始 每次加1 往后面计算  这里面必须是n 不能是其他的字母 选择了所有的孩子
					ol li:nth-child(n) {
						background-color: pink;
					}
		1.2.2 E:nth-of-type(i)
			指定类型E的第n个
		1.2.3 E:nth-child和E:nth-of-type的区别
			1. E:nth-chil先找到第n个孩子，然后再看是否和E匹配
			2. E:nth-of-type先匹配E，然后再根据E找第n个孩子
	1.3 伪元素选择器
		可以帮助我们利用CSS创建新标签元素，而不需要HTML标签，从而简化HTML结构，有before和after两种
		注意：
			1. 创建的伪元素属于行内元素
			2. 创建的伪元素在文档树中是找不到的
			3. 语法：element::before{}
			4. {}中必须包含content属性，如果不需要内容可以写''
			5. before是将新建伪元素插到在element内的最前面，after是最后
			6. 伪元素选择器的权重是1

2. CSS3盒子模型
	2.1 box-sizing:border-box	
		加了这句后，指定了盒子大小后再添加padding和border也不会撑大盒子，因此可以把这条语句加到CSS全局初始化样式中

3. CSS3过渡
	3.1 语法
		transition:要过渡的属性 花费时间 运动曲线 延迟触发时间
		注意
		1. 后两个可以省略
		2. 如果想要过渡多个属性，利用逗号分隔
		3. 如果想要所有属性都进行相同的过渡，则“要过渡的属性”处写all
		4. 谁做过渡，就把transition写在谁的CSS样式里面

4. 转换transform
	4.1 2D转换
		4.1.1 移动translate
			1. 语法：
				transform: translate(x, y);
				x就是x轴上移动位置 y 就是y轴上移动位置 中间用逗号分隔
				如果只移动x坐标：transform: translateX(100px);
				如果只移动y坐标：transform: translateY(100px);
			2. translate最大的优点：不会影响其他元素的位置
			3. 可以写百分比，是相对于自身
			4. 对行内标签无效
		4.1.2 旋转rotate
			1. 语法
				transform:rotate(度数)
			2. 注意
				1. 度数的单位是deg
				2. 度数为正时顺时针旋转
				3. 默认旋转中心是元素的中心点

		4.1.3 缩放scale
			1. 语法：	
				transform:scale(x,y);
			2. 注意
				1. x和y用逗号分隔
				2. 只写一个参数，为等比例缩放
				3. 优点：不会影响其他盒子

		4.1.4 综合写法
			1. 格式：transform:translate() rotate() scale()...
			2. 顺序会影响转换效果
			3. 因此当同时又位移和其他属性的时候，位移要放在最前面

		4.1.5 设置转换中心
			语法：transform-origin:x y;
			重点：
				1. x和y用空格隔开
				2. 可以给xy设置像素或者方位名词
	
