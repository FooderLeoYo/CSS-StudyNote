1. 为什么需要浮动
	标准流不好控制横向间距

2. 什么是浮动
	将浮动框移到某一边的边缘，如果是两个框则会紧挨着

3. 浮动特性
	3.1 浮动元素会脱离标准流（脱标）
		设置了浮动的元素具有重要特性：
		3.1.1 脱离标准普通流的控制（浮）移动到指定位置（动），俗称脱标
		3.1.2 浮动的盒子不在保留原先的位置
	3.2 浮动的元素会一行内显示并且元素顶部对齐
		如果一行装不下则会另起一行

	3.3 浮动的的元素会具有行内块元素的特性
		
4. 浮动元素经常和标准流父级搭配使用
	为了约束浮动元素位置，我们网页布局一般采取的措施是：
	先用标准流的父元素排列上下位置，之后内部子元素采取浮动排列左右位置

5. 常见网页布局
	5.1 浮动布局注意点
		5.1.1 浮动和标准流的父盒子搭配使用：网页布局第一准则
		5.1.2 一个元素浮动了，理论上其余的兄弟元素也要浮动
			注意，浮动的盒子只会影响其后面的标准流，不会影响前面的
	5.2. 网页布局准则
		网页布局第一准则：多个块级元素纵向排列由标准流控制，横向由浮动控制
		网页布局第而准则：先设置盒子的大小，再设置盒子的位置

6. 清除浮动
	6.1 为什么要清除浮动
		由于父级盒子很多情况下不方便给定高度（内容会随时增加），但子盒子浮动后不占有位置，父级盒子高度就会变为0，下面的标准流盒子就会跑上来
		同时满足以下三个条件时就需要清除浮动：
		1. 父级没有设置高度
		2. 子盒子浮动了
		3. 影响下面布局了
	6.2 清除浮动语法
		选择器{clear:both;}
	6.3 清除浮动的方法
		6.3.1 额外标签法
			在浮动元素末尾添加一个空的块级标签，并在CSS样式中清除新添加的空标签的浮动，这样新标签就会把父盒子撑开
			优点：书写方便
			缺点：添加许多无意义的标签，结构化较差，实际工作中用得很少
		6.3.2 给父级添加overflow属性
			CSS中给父盒子添加overflow属性，并将其属性值设置为hidden, auto或scroll
			优点：代码简洁
			缺点：无法显示溢出的部分
		6.3.3 after伪元素法
			相当于额外标签法升级版，利用CSS而不是HTML给父盒子尾部添加伪元素
			语法：
			CSS中添加样式：
			.clearfix:after { /* 添加伪元素一般是用双冒号，这里用单冒号是为了照顾兼容性 */
				content: "";
				display: block;
				height: 0;
				clear: both;
				visibility: hidden;
			}
			.clearfix {
				/* 解决IE6、7兼容性问题 */
				*zoom: 1;
			}
			然后给父盒子添加一个clearfix类
			优点：没有增加新标签，body结构更清晰
			缺点：需要考虑浏览器兼容性
		6.3.4 双伪元素法
			给父盒子前后都添加伪元素，代码比after伪元素法更为简洁
			语法：
			.clearfix:before,
			.clearfix:after {
				content: "";
				display: table;
			}

			.clearfix:after {
				clear: both;
			}

			.clearfix {
				*zoom: 1;
			}
			优点：代码更简洁
			缺点：兼容性问题

7. PS切图
	7.1 常见图片格式
		jpg：经常用于产品类的图片
		gif：小动画效果
		png：背景透明的图片
		PSD：可以直接从上面复制文字，获得图片，还可以测量大小和距离
	7.2 图层切图
		右击图层——>快速导出为png
		但是很多情况下，我们需要合并图层再导出：
		1. 选中需要的几个图层：图层菜单——>合并图层(ctrl + e)
		2. 右键——>快速导出为png
	7.3  切片切图
		1. 利用切片工具手动划出图片
		2. 文件菜单——>导出——>存储为web设备所有格式——>选择格式——>存储
	7.4 cutterman插件切图
